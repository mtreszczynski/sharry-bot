from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, CommandHandler, filters

TOKEN = "8149438916:AAERXz-gzOy8aPOhBQVCU88Q8EMe_6WMuZs"

# S≈Çowa kluczowe (rozszerzone)
NEGATIVE_KEYWORDS = ["–Ω—ñ", "–Ω–µ—Ç", "–Ω–µ—Ü—ñ–∫–∞–≤–æ", "ni", "net", "no"]
POSITIVE_KEYWORDS = ["—Ç–∞–∫", "–¥–∞", "—Ü—ñ–∫–∞–≤–æ", "tak", "da", "yes"]

# Przechowywanie stanu konwersacji
user_states = {}

# Wiadomo≈õci
INITIAL_MESSAGE = """–î–æ–±—Ä–∏–π –¥–µ–Ω—å 
–î—è–∫—É—î–º–æ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç —Ç–∞ —ñ–Ω—Ç–µ—Ä–µ—Å –¥–æ –≤–∞–∫–∞–Ω—Å—ñ—ó.

–û—Å—å –Ω–∞—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞:
üåê https://sharry.eu/
–¢–∞–∫–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ –Ω–∞–º–∏ –≤ —Å–æ—Ü–º–µ—Ä–µ–∂–∞—Ö:
üì∏ Instagram instagram.com/sharry.eu
üé• TikTok https://www.tiktok.com/@sharry.eu
–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –Ω–∞—à—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É —Ç–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ. –ß–∏ —Ü—ñ–∫–∞–≤–∞ –≤–∞–º —Ä–æ–±–æ—Ç–∞ –≤ —Ç–∞–∫—ñ–π —Å—Ñ–µ—Ä—ñ?"""

NEGATIVE_REPLY = "–ù—ñ—á–æ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ. –ë–∞–∂–∞—î–º–æ —É—Å–ø—ñ—Ö—ñ–≤ —É –ø–æ—à—É–∫—É —Ä–æ–±–æ—Ç–∏. –í–∏ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–Ω–∞–π–¥–µ—Ç–µ —Ä–æ–±–æ—Ç—É —Å–≤–æ—î—ó –º—Ä—ñ—ó. –ë–∞–∂–∞—é —É—Å–ø—ñ—Ö—ñ–≤."

JOB_DESCRIPTION = """–í–∞—à–∞ –æ—Å–Ω–æ–≤–Ω–∞ —Ä–æ–ª—å –±—É–¥–µ –ø–æ–ª—è–≥–∞—Ç–∏ –≤ –æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—ñ –≤—Ö—ñ–¥–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤, –¥–∑–≤—ñ–Ω–∫—ñ–≤ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, –ø–æ–≤'—è–∑–∞–Ω–∏—Ö —ñ–∑ –ø–æ—à—É–∫–æ–º –ø–æ—ó–∑–¥–æ–∫ —Ç–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è–º –º—ñ—Å—Ü—å.
–°–∞–º–æ—Å—Ç—ñ–π–Ω–æ —à—É–∫–∞—Ç–∏ –ø–∞—Å–∞–∂–∏—Ä—ñ–≤ –í–∞–º –ù–ï –ø–æ—Ç—Ä—ñ–±–Ω–æ, –º–∏ —Ç–∞–∫ –Ω–µ –ø—Ä–∞—Ü—é—î–º–æ, –ø–∞—Å–∞–∂–∏—Ä–∏ —Å–∞–º—ñ –ø—Ä–∏—Ö–æ–¥—è—Ç—å –Ω–∞ –Ω–∞—à —Å–∞–π—Ç!

–†–æ–±–æ—Ç–∞ –≤–∫–ª—é—á–∞—Ç–∏–º–µ:
-–û–±—Ä–æ–±–∫—É –∑–∞–º–æ–≤–ª–µ–Ω—å, —è–∫—ñ –Ω–∞–¥—Ö–æ–¥—è—Ç—å –Ω–∞ –Ω–∞—à —Å–∞–π—Ç, –¥–µ –ø–∞—Å–∞–∂–∏—Ä–∏ –±—Ä–æ–Ω—é—é—Ç—å –∫–≤–∏—Ç–∫–∏ –Ω–∞ –∞–≤—Ç–æ–±—É—Å–∏ —Ç–∞ –±—É—Å–∏.
-–ó–≤'—è–∑–æ–∫ —ñ–∑ –ø–∞—Å–∞–∂–∏—Ä–∞–º–∏ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —ó—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å —É —Å–∏—Å—Ç–µ–º—ñ.
-–Ü–Ω—Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–∞—Å–∞–∂–∏—Ä—ñ–≤ –ø—Ä–æ —É–º–æ–≤–∏ —Ä–µ–π—Å—É.
-–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏—Ö –∫–≤–∏—Ç–∫—ñ–≤ –ø–∞—Å–∞–∂–∏—Ä–∞–º.
-–†–æ–±–æ—Ç–∞ –∑ –ø–∞–Ω–µ–ª–ª—é —Ä–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è –≤ –∫–∞–±—ñ–Ω–µ—Ç—ñ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞.
-–û–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ–ª—ñ–Ω—ñ—ó.

–ß–∏ –±—É–¥–µ —Ü–µ –¥–ª—è –≤–∞—Å —Ü—ñ–∫–∞–≤–æ?"""

QUESTIONS = """–†–æ–∑–∫–∞–∂—ñ—Ç—å —Ç—Ä–æ—Ö–∏ –ø—Ä–æ —Å–µ–±–µ —ñ –¥–æ–º–æ–≤–∏–º–æ—Å—å –ø—Ä–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É —Ä–æ–∑–º–æ–≤—É)

-–ó —è–∫–æ–≥–æ –≤–∏ –º—ñ—Å—Ç–∞? 
-–°–∫—ñ–ª—å–∫–∏ –≤–∞–º —Ä–æ–∫—ñ–≤? 
-–Ø–∫–∞ –≤–∞—à–∞ –æ—Å–≤—ñ—Ç–∞?
-–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ –≤–∞—à –¥–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏. –ß–∏ –±—É–≤ –¥–æ—Å–≤—ñ–¥ –≤—ñ–¥–¥–∞–ª–µ–Ω–æ—ó —Ä–æ–±–æ—Ç–∏?
-–ß–∏ –º–∞–ª–∏ –≤–∏ –¥–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ —Ç–∞–±–ª–∏—Ü—è–º–∏ Google –∞–±–æ Excel?
-–ß–∏ —î —É –≤–∞—Å –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–º–ø'—é—Ç–µ—Ä–∞?
-–Ø–∫ –≤–∏ –≤–ø–æ—Ä–∞—î—Ç–µ—Å—è –∑ —Å–∏—Ç—É–∞—Ü—ñ—è–º–∏ –≤–∏–º–∫–Ω–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞?  –ß–∏ —î —É –≤–∞—Å –∑–∞–ø–∞—Å–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏?
-–Ø–∫–∞ –≤–∞—à–∞ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –ø—Ä–æ—Ç—è–≥–æ–º –¥–Ω—è (—Å–∫—ñ–ª—å–∫–∏ –≥–æ–¥–∏–Ω –Ω–∞ –¥–µ–Ω—å —ñ –≤ —è–∫—ñ–π –ø–æ–ª–æ–≤–∏–Ω—ñ –¥–Ω—è)?"""

FINAL_REPLY = "–ú–∏ –≥–æ—Ç–æ–≤—ñ –≤–∞—Å –Ω–∞–≤—á–∏—Ç–∏. –î–ª—è —Ç–æ–≥–æ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç, —â–æ –ø–æ—Å–≤—ñ–¥—á—É—î –≤–∞—à—É –æ—Å–æ–±—É, –Ω–∞ –ø–æ—à—Ç—É hr@sharry.eu"

# Obs≈Çuga komendy /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_states[user_id] = "initial"
    await update.message.reply_text(INITIAL_MESSAGE)

# Obs≈Çuga wiadomo≈õci
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.lower()

    state = user_states.get(user_id, "initial")

    # Etap 1: po wiadomo≈õci powitalnej
    if state == "initial":
        if any(word in text for word in NEGATIVE_KEYWORDS):
            await update.message.reply_text(NEGATIVE_REPLY)
            user_states[user_id] = "end"
        elif any(word in text for word in POSITIVE_KEYWORDS):
            await update.message.reply_text(JOB_DESCRIPTION)
            user_states[user_id] = "job_sent"
        return

    # Etap 2: po opisie pracy
    if state == "job_sent":
        if any(word in text for word in NEGATIVE_KEYWORDS):
            await update.message.reply_text(NEGATIVE_REPLY)
            user_states[user_id] = "end"
        elif any(word in text for word in POSITIVE_KEYWORDS):
            await update.message.reply_text(QUESTIONS)
            user_states[user_id] = "questions_sent"
        return

    # Etap 3: kandydat odpowiada na pytania
    if state == "questions_sent":
        await update.message.reply_text(FINAL_REPLY)
        user_states[user_id] = "end"
        return

# Uruchomienie bota
if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("ü§ñ RekrutacjaSharryBot dzia≈Ça...")
    app.run_polling()
